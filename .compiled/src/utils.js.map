{"version":3,"sources":["../../src/utils.js"],"names":["mkdirP","fname","Promise","resolve","reject","path","dirname","err","writeFileP","contents","then","fs","writeFile","readFileP","readFile","data","globP","options","nodir","files","updateFileP","name","content","createFileP","addFileP"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAJA;AAMA,SAASA,MAAT,CAAiBC,KAAjB,EAAyB;AACrB,WAAO,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAsB;AACtC,8BAAQC,eAAKC,OAAL,CAAcL,KAAd,CAAR,EAA+B,UAACM,GAAD,EAAS;AACpC,mBAAOA,MAAMH,OAAOG,GAAP,CAAN,GAAoBJ,SAA3B;AACH,SAFD;AAGH,KAJM,CAAP;AAKH;;AAED,SAASK,UAAT,CAAqBP,KAArB,EAA4BQ,QAA5B,EAAuC;AACnC,WAAOT,OAAQC,KAAR,EAAgBS,IAAhB,CAAsB,YAAM;AAC/B,eAAO,IAAIR,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAsB;AACtCO,yBAAGC,SAAH,CAAcX,KAAd,EAAqBQ,QAArB,EAA+B,UAACF,GAAD,EAAS;AACpC,uBAAOA,MAAMH,OAAOG,GAAP,CAAN,GAAoBJ,QAASF,KAAT,CAA3B;AACH,aAFD;AAGH,SAJM,CAAP;AAKH,KANM,CAAP;AAOH;;AAED,SAASY,SAAT,CAAoBZ,KAApB,EAA4B;AACpB,WAAO,IAAIC,OAAJ,CAAa,UAACC,OAAD,EAAUC,MAAV,EAAsB;AACtCO,qBAAGG,QAAH,CAAab,KAAb,EAAoB,UAACM,GAAD,EAAKQ,IAAL,EAAc;AAC9BR,kBAAMH,OAAOG,GAAP,CAAN,GAAoBJ,QAASY,IAAT,CAApB;AACH,SAFD;AAGH,KAJM,CAAP;AAKP;;AAED,SAASC,KAAT,CAAgBX,IAAhB,EAAsBY,OAAtB,EAAgC;AAC5BA,cAAUA,WAAW,EAArB;AACAA,YAAQC,KAAR,GAAgB,IAAhB;AACA,WAAO,IAAIhB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC,4BAAKC,IAAL,EAAWY,OAAX,EAAoB,UAACV,GAAD,EAAMY,KAAN,EAAgB;AAChC,mBAAOZ,MAAMH,OAAOG,GAAP,CAAN,GAAoBJ,QAAQgB,KAAR,CAA3B;AACH,SAFD;AAGH,KAJM,CAAP;AAKH;;AAED,SAASC,WAAT,CAAsBC,IAAtB,EAA4BC,OAA5B,EAAsC;AAClC,WAAOd,WAAYa,IAAZ,EAAkBC,OAAlB,CAAP;AACH;;AAED,SAASC,WAAT,CAAsBF,IAAtB,EAA4BC,OAA5B,EAAsC;AAClC,WAAOd,WAAYa,IAAZ,EAAkBC,OAAlB,CAAP;AACH;;AAED,SAASE,QAAT,CAAmBH,IAAnB,EAAyBC,OAAzB,EAAkCL,OAAlC,EAA4C;AACxCA,cAAUA,WAAW,OAArB;AACA,YAAQA,OAAR;AACI,aAAK,OAAL;AAAc,mBAAOT,WAAYa,IAAZ,EAAkBC,OAAlB,CAAP;AACd,aAAK,QAAL;AAAe,mBAAOF,YAAaC,IAAb,EAAmBC,OAAnB,CAAP;AACf,aAAK,QAAL;AAAe,mBAAOC,YAAaF,IAAb,EAAmBZ,QAAnB,CAAP;AACf;AACI,mBAAOP,QAAQE,MAAR,yBAAqCa,OAArC,yBAAP;AALR;AAOH;;kBAEc;AACXjB,kBADW;AAEXQ,0BAFW;AAGXK,wBAHW;AAIXW,sBAJW;AAKXR;AALW,C","file":"utils.js","sourcesContent":["// Contains utility functions...\nimport glob from 'glob'\nimport fs from 'fs'\nimport mkdirp from 'mkdirp'\nimport path from 'path'\n\nfunction mkdirP( fname ) {\n    return new Promise( (resolve, reject ) => {\n        mkdirp( path.dirname( fname ), (err) => {\n            return err ? reject(err) : resolve();\n        })\n    })\n}\n\nfunction writeFileP( fname, contents ) {\n    return mkdirP( fname ).then( () => {\n        return new Promise( (resolve, reject ) => {\n            fs.writeFile( fname, contents, (err) => {\n                return err ? reject(err) : resolve( fname )\n            })\n        })\n    })\n}\n\nfunction readFileP( fname ) {\n        return new Promise( (resolve, reject ) => {\n            fs.readFile( fname, (err,data) => {\n                err ? reject(err) : resolve( data )\n            })\n        })\n}\n\nfunction globP( path, options ) {\n    options = options || {}\n    options.nodir = true;\n    return new Promise((resolve, reject) => {\n        glob(path, options, (err, files) => {\n            return err ? reject(err) : resolve(files)\n        })\n    })\n}\n\nfunction updateFileP( name, content ) {\n    return writeFileP( name, content )\n}\n\nfunction createFileP( name, content ) {\n    return writeFileP( name, content )\n}\n\nfunction addFileP( name, content, options ) {\n    options = options || 'write';\n    switch( options ) {\n        case 'write': return writeFileP( name, content );\n        case 'update': return updateFileP( name, content );\n        case 'create': return createFileP( name, contents );\n        default:\n            return Promise.reject(`Unknown file type, ${options}, in utils.addFileP`)\n    }\n}\n\nexport default {\n    mkdirP,\n    writeFileP,\n    readFileP,\n    addFileP,\n    globP\n}"]}